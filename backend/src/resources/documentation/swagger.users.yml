tags:
  name: User
  description: The user's managing API

# --- Routes
paths:
  /users/{id}:
    get:
      summary: Retrieve one user
      tags: [User]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the user to get
      responses:
        200:
          description: The required user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found
  /users/account/{account_id}:
    get:
      summary: Retrieve users by account ID
      tags: [User]
      parameters:
        - in: path
          name: account_id
          schema:
            type: integer
          required: true
          description: Account ID for which to retrieve the users
      responses:
        200:
          description: The user associated with the account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found for the specified account.

# --- Types
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: number
          description: The auto-generated id of a user
        username:
          type: string
          description: The user's username
        created_at:
          type: string
          format: date
          description: The date the user created its account
        account_id:
          type: number
          description: The id of the account
        avatar:
          type: string
          description: The avatar of the user
      example:
        id: 1
        username: Wtfluna
        created_at: 01-01-2023
        account_id: 1
        avatar: https://www.gstatic.com/android/keyboard/emojikitchen/20230803/u1f42e/u1f42e_u1f388.png
